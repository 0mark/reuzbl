FAQ
---

### I just installed uzbl but it doesn't do much.  I can load one url and quit the program but that's it.
You did not load a configuration.  Uzbl does not create a default config file on startup like some other programs do.
Because we want to give you the freedom to place your config where you want, and to use a config or not.
Have a look in /usr/share/uzbl/examples/configs

### Where is the location bar? How do I change the URL ?
Uzbl has no location bar.  All changes to the url (editing of current url, loading of new url from bookmarks/history/...) happens *outside* of uzbl.
Have a look at the sample scripts in /usr/share/uzbl/examples.  Most of our examples use dmenu which is a nifty little tool to pick an item from a list of items (very
useful with history/bookmarks) with a limited set of keystrokes.  see man dmenu.
You can also use it to make edits, though it's not the most suitable editor. We're looking into a better way to make edits. (zenity is also an option, if
you want copy-paste support)

### Where are the widgets (forward, back,.. button etc)
Uzbl's layout only contains what you really need to see.  we only have a statusbar, which even can also be disabled.  There are no buttons, but we do
have lots of keybinding possibilities.

### Why can't I type anything in forms?  How does the keybinding work?
You are in command mode, not in insert mode.

* command mode: you can trigger actions inside uzbl with minimum amount of keypresses (eg 'q' to quit)  (see config examples), but not to type actual text into forms, because all your keypresses are interpreted.
* insert mode: after going into insert mode (by default this is the 'i' binding from inside command mode), your keypresses are not interpreted but passed on, so you can enter text into forms.  Press Esc to go out of insert mode.

The above method is called "modal" as inspired on VI.  If you don't like
this you can easily change this:

* enable always\_insert\_mode in your config.  You will always be in insert mode.
* configure a modkey.  Since your keypresses are not interpreted anymore to trigger actions, you need a modkey to do things (eg alt+'q' to quit instead of just 'q' from command mode)

This method is how many applications work.

Both have their pro's and cons.  We don't want to force anyone in using
either, so by tuning the modkey and always\_insert\_mode settings you can pick
whichever method you like, or both at the same time (command mode, insert mode, and the modkey to perform actions while in insert mode)

### What? You call all of this user-friendly?
Yes.  If you don't agree, don't use it :)